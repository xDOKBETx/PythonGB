''' Задание №1
Создайте класс-функцию, который считает факториал числа при вызове экземпляра.
Экземпляр должен запоминать последние k значений.
Параметр k передаётся при создании экземпляра.
Добавьте метод для просмотра ранее вызываемых значений и их факториалов.
'''

from math import factorial


class Factorial:
    """
    Класс для вычисления факториала числа и отслеживания истории вычислений.
    """

    def __init__(self, k):
        """
        Конструктор класса Factorial.

        Параметры:
        - k (int): Размер истории (количество последних вычислений факториалов, которые будут сохранены).

        Исключения:
        - ValueError: Вызывается, если значение k не является положительным целым числом.
        """
        if not isinstance(k, int) or k <= 0:
            raise ValueError("k должно быть положительным целым числом")
        self.k = k
        self.history = []

    def calculate_factorial(self, n):
        """
        Вычисляет факториал числа n.

        Параметры:
        - n (int): Число, для которого необходимо вычислить факториал.

        Возвращает:
        - int: Результат вычисления факториала числа n.

        Исключения:
        - ValueError: Вызывается, если значение n не является неотрицательным целым числом или
                      если значение n слишком велико для вычисления факториала.
        """
        if not isinstance(n, int) or n < 0:
            raise ValueError("n должно быть неотрицательным целым числом")
        try:
            result = factorial(n)
        except OverflowError:
            raise ValueError("Слишком большое значение n для вычисления факториала")
        self.history.append((n, result))
        self.history = self.history[-self.k:]
        return result

    def print_history(self):
        """
        Выводит историю вычислений факториалов.

        Для каждой записи в истории выводится форматированная строка вида "n! = result".
        """
        for n, res in self.history:
            print(f"{n}! = {res}")


calc = Factorial(5)
calc.calculate_factorial(5)
calc.print_history()
